dim(expr_test) #54675*214
expr_train1 = t(expr_train)
expr_test1 = t(expr_test)
dim(expr_train1)
dim(expr_test1)
p=dim(expr_train1)[2]
start = as.Date(outcome_train$enrolledon, "%m/%d/%Y")
end = as.Date(outcome_train$lastcontactdate, "%m/%d/%Y")
death = as.Date(outcome_train$deathdate, "%m/%d/%Y")
T = as.numeric(end - start)
d = as.numeric(!is.na(death))
outcome = as.data.frame(cbind(T=T, d=d))
exp_train2 = cbind(outcome, expr_train1)
km = survfit(Surv(T,d)~1, data = outcome, conf.type = "log-log")
plot(km)
alpha = 0.05
pow = 0.9
pi = 0.5
HR = 0.5
time.total = 4
beta = 1-pow
d = (qnorm(1-(alpha/2))+qnorm(pow))^2/(pi*(1-pi)*(log(HR))^2)
d
d= (qnorm(alpha/2) + qnorm(beta))^2 / (pi*(1-pi) * log(HR)^2)
d
x = km$time
y = km$surv
S = stepfun(x, c(0.01,y))
a = 365
f = 1095
prob = 1-1/6 * (S(f) + 4* S(0.5*a+f) + S(a+f))
prob
n = d / prob
ceiling(n)
library(shiny)
library(shinydashboard)
header <- dashboardHeader(
dropdownMenu(
type = "messages",
messageItem(
from = "Lucy",
message = "You can view the International Space Station!",
href = "https://spotthestation.nasa.gov/sightings/"
),
# Add a second messageItem()
messageItem(
from = "Lucy",
message = "Learn more about the International Space Station",
href = "https://spotthestation.nasa.gov/fa"
)
)
)
ui <- dashboardPage(header = header,
sidebar = dashboardSidebar(),
body = dashboardBody()
## spin up an empty dashboard with server
server <- function(input, output) {}
shiny::shinyApp(ui, server)
library(shiny)
library(shinydashboard)
header <- dashboardHeader(
dropdownMenu(
type = "messages",
messageItem(
from = "Lucy",
message = "You can view the International Space Station!",
href = "https://spotthestation.nasa.gov/sightings/"
),
# Add a second messageItem()
messageItem(
from = "Lucy",
message = "Learn more about the International Space Station",
href = "https://spotthestation.nasa.gov/faq.cfm"
)
)
)
ui <- dashboardPage(header = header,
sidebar = dashboardSidebar(),
body = dashboardBody()
## spin up an empty dashboard with server
server <- function(input, output) {}
shiny::shinyApp(ui, server)
library(shiny)
library(shinydashboard)
header <- dashboardHeader(
dropdownMenu(
type = "messages",
messageItem(
from = "Lucy",
message = "You can view the International Space Station!",
href = "https://spotthestation.nasa.gov/sightings/"
),
# Add a second messageItem()
messageItem(
from = "Lucy",
message = "Learn more about the International Space Station",
href = "https://spotthestation.nasa.gov/faq.cfm"
)
)
dropdownMenu(
type = "notifications",
notificationItem(
text = "The International Space Station is overhead!"
)
)
ui <- dashboardPage(header = header,
sidebar = dashboardSidebar(),
body = dashboardBody()
## spin up an empty dashboard with server
server <- function(input, output) {}
shiny::shinyApp(ui, server)
library(shiny)
library(shinydashboard)
header <- dashboardHeader(
dropdownMenu(
type = "messages",
messageItem(
from = "Lucy",
message = "You can view the International Space Station!",
href = "https://spotthestation.nasa.gov/sightings/"
),
# Add a second messageItem()
messageItem(
from = "Lucy",
message = "Learn more about the International Space Station",
href = "https://spotthestation.nasa.gov/faq.cfm"
)
)
)
ui <- dashboardPage(header = header,
sidebar = dashboardSidebar(),
body = dashboardBody()
## spin up an empty dashboard with server
server <- function(input, output) {}
shiny::shinyApp(ui, server)
library(shiny)
library(shinydashboard)
header <- dashboardHeader(
dropdownMenu(
type = "messages",
messageItem(
from = "Lucy",
message = "You can view the International Space Station!",
href = "https://spotthestation.nasa.gov/sightings/"
),
# Add a second messageItem()
messageItem(
from = "Lucy",
message = "Learn more about the International Space Station",
href = "https://spotthestation.nasa.gov/faq.cfm"
)
)
)
ui <- dashboardPage(header = header,
sidebar = dashboardSidebar(),
body = dashboardBody()
server <- function(input, output) {}
shiny::shinyApp(ui, server)
library(shiny)
library(shinydashboard)
header <- dashboardHeader(
dropdownMenu(
type = "messages",
messageItem(
from = "Lucy",
message = "You can view the International Space Station!",
href = "https://spotthestation.nasa.gov/sightings/"
),
# Add a second messageItem()
messageItem(
from = "Lucy",
message = "Learn more about the International Space Station",
href = "https://spotthestation.nasa.gov/faq.cfm"
)
)
)
ui <- dashboardPage(header = header,
sidebar = dashboardSidebar(),
body = dashboardBody()
server <- function(input, output)
{}
shiny::shinyApp(ui, server)
library(shiny)
library(shinydashboard)
header <- dashboardHeader(
dropdownMenu(
type = "messages",
messageItem(
from = "Lucy",
message = "You can view the International Space Station!",
href = "https://spotthestation.nasa.gov/sightings/"
),
# Add a second messageItem()
messageItem(
from = "Lucy",
message = "Learn more about the International Space Station",
href = "https://spotthestation.nasa.gov/faq.cfm"
)
)
dropdownMenu(
type = "notifications",
notificationItem(
text = "The International Space Station is overhead!"
)
)
ui <- dashboardPage(header = header,
sidebar = dashboardSidebar(),
body = dashboardBody()
server <- function(input, output)
{}
shiny::shinyApp(ui, server)
library(shiny)
library(shinydashboard)
header <- dashboardHeader(
dropdownMenu(
type = "messages",
messageItem(
from = "Lucy",
message = "You can view the International Space Station!",
href = "https://spotthestation.nasa.gov/sightings/"
),
# Add a second messageItem()
messageItem(
from = "Lucy",
message = "Learn more about the International Space Station",
href = "https://spotthestation.nasa.gov/faq.cfm"
)
),
dropdownMenu(
type = "notifications",
notificationItem(
text = "The International Space Station is overhead!"
)
)
ui <- dashboardPage(header = header,
sidebar = dashboardSidebar(),
body = dashboardBody()
server <- function(input, output)
{}
shiny::shinyApp(ui, server)
library(shiny)
library(shinydashboard)
header <- dashboardHeader(
dropdownMenu(
type = "messages",
messageItem(
from = "Lucy",
message = "You can view the International Space Station!",
href = "https://spotthestation.nasa.gov/sightings/"
),
# Add a second messageItem()
messageItem(
from = "Lucy",
message = "Learn more about the International Space Station",
href = "https://spotthestation.nasa.gov/faq.cfm"
)
)
)
ui <- dashboardPage(header = header,
sidebar = dashboardSidebar(),
body = dashboardBody()
server <- function(input, output)
{}
shiny::shinyApp(ui, server)
runApp('OneDrive - University of Illinois - Urbana/R/Create dashboard_test.R')
library(shiny)
library(shinydashboard)
header <- dashboardHeader(
dropdownMenu(
type = "notifications",
notificationItem(
text = "The International Space Station is overhead!"
)
)
ui <- dashboardPage(header = header,
sidebar = dashboardSidebar(),
body = dashboardBody()
server <- function(input, output)
{}
shiny::shinyApp(ui, server)
library(shiny)
library(shinydashboard)
header <- dashboardHeader(
dropdownMenu(
type = "messages",
messageItem(
from = "Lucy",
message = "You can view the International Space Station!",
href = "https://spotthestation.nasa.gov/sightings/"
),
# Add a second messageItem()
messageItem(
from = "Lucy",
message = "Learn more about the International Space Station",
href = "https://spotthestation.nasa.gov/faq.cfm"
)
)
)
ui <- dashboardPage(header = header,
sidebar = dashboardSidebar(),
body = dashboardBody()
server <- function(input, output)
{}
shiny::shinyApp(ui, server)
runApp('OneDrive - University of Illinois - Urbana/R/Create dashboard_test.R')
library(shiny)
library(shinydashboard)
header <- dashboardHeader(
dropdownMenu(
type = "messages",
messageItem(
from = "Lucy",
message = "You can view the International Space Station!",
href = "https://spotthestation.nasa.gov/sightings/"
),
# Add a second messageItem()
messageItem(
from = "Lucy",
message = "Learn more about the International Space Station",
href = "https://spotthestation.nasa.gov/faq.cfm"
)
)
)
ui <- dashboardPage(header = header,
sidebar = dashboardSidebar(),
body = dashboardBody()
)
server <- function(input, output)
{}
shiny::shinyApp(ui, server)
runApp('OneDrive - University of Illinois - Urbana/R/Create dashboard_test.R')
library(shiny)
library(shinydashboard)
header <- dashboardHeader(
dropdownMenu(
type = "messages",
messageItem(
from = "Lucy",
message = "You can view the International Space Station!",
href = "https://spotthestation.nasa.gov/sightings/"
),
# Add a second messageItem()
messageItem(
from = "Lucy",
message = "Learn more about the International Space Station",
href = "https://spotthestation.nasa.gov/faq.cfm"
)
),
dropdownMenu(
type = "notifications",
notificationItem(
text = "The International Space Station is overhead!"
)
)
ui <- dashboardPage(header = header,
sidebar = dashboardSidebar(),
body = dashboardBody()
)
server <- function(input, output)
{}
shiny::shinyApp(ui, server)
library(shiny)
library(shinydashboard)
header <- dashboardHeader(
dropdownMenu(
type = "messages",
messageItem(
from = "Lucy",
message = "You can view the International Space Station!",
href = "https://spotthestation.nasa.gov/sightings/"
),
# Add a second messageItem()
messageItem(
from = "Lucy",
message = "Learn more about the International Space Station",
href = "https://spotthestation.nasa.gov/faq.cfm"
)
),
dropdownMenu(
type = "notifications",
notificationItem(
text = "The International Space Station is overhead!"
)
)
)
ui <- dashboardPage(header = header,
sidebar = dashboardSidebar(),
body = dashboardBody()
)
server <- function(input, output)
{}
shiny::shinyApp(ui, server)
library(shiny)
library(shinydashboard)
header <- dashboardHeader(
dropdownMenu(
type = "messages",
messageItem(
from = "Lucy",
message = "You can view the International Space Station!",
href = "https://spotthestation.nasa.gov/sightings/"
),
# Add a second messageItem()
messageItem(
from = "Lucy",
message = "Learn more about the International Space Station",
href = "https://spotthestation.nasa.gov/faq.cfm"
)
),
dropdownMenu(
type = "notifications",
notificationItem(
text = "The International Space Station is overhead!"
)
),
dropdownMenu(
type = "tasks",
taskItem(
text = "Mission Learn Shiny Dashboard",
value = 10
)
)
)
ui <- dashboardPage(header = header,
sidebar = dashboardSidebar(),
body = dashboardBody()
)
server <- function(input, output)
{}
shiny::shinyApp(ui, server)
runApp('OneDrive - University of Illinois - Urbana/R/Create dashboard.R')
runApp('OneDrive - University of Illinois - Urbana/R/Create dashboard.R')
runApp('OneDrive - University of Illinois - Urbana/R/Create dashboard.R')
runApp('OneDrive - University of Illinois - Urbana/R/Create dashboard.R')
runApp('OneDrive - University of Illinois - Urbana/R/Create dashboard.R')
S0 = stepfun(x, c(0.01,y))
S1 = S0^HR
S0 = stepfun(x, c(0.01,y))
S1 = stepfun(x, c(0.01,y)^HR)
S = function(x,p){
pi * S0(x) + (1-pi) * S1(x)
}
S0 = stepfun(x, c(0.01,y))
S1 = stepfun(x, c(0.01,y)^HR)
S = function(x,pi){
pi * S0(x) + (1-pi) * S1(x)
}
S0 = stepfun(x, c(0.01,y))
S1 = stepfun(x, c(0.01,y)^HR)
S = function(x,pi){
pi * S0(x) + (1-pi) * S1(x)
}
pi
prob = 1-1/6 * (S(f,pi) + 4* S(0.5*a+f) + S(a+f,pi))
prob = 1-1/6 * (S(f,pi) + 4* S(0.5*a+f,pi) + S(a+f,pi))
prob
n = d / prob
ceiling(n)
n
rm(list=ls())
runApp('OneDrive - University of Illinois - Urbana/R/Create dashboard.R')
library(shiny)
library(shinydashboard)
library(dplyr)
dim(starwars)
str(starwars)
?selectInput
?sliderInput
runApp('OneDrive - University of Illinois - Urbana/R/Create dashboard_test.R')
runApp('OneDrive - University of Illinois - Urbana/R/Create dashboard_test.R')
runApp('OneDrive - University of Illinois - Urbana/R/Create dashboard.R')
?select.list
?selectInput
runApp('OneDrive - University of Illinois - Urbana/R/Create dashboard.R')
runApp('OneDrive - University of Illinois - Urbana/R/Create dashboard.R')
runApp('OneDrive - University of Illinois - Urbana/R/Create dashboard.R')
runApp('OneDrive - University of Illinois - Urbana/R/Create dashboard.R')
runApp('OneDrive - University of Illinois - Urbana/R/Create dashboard.R')
?dropdownMenu
setwd("/Users/hannahpu/OneDrive - University of Illinois - Urbana/R/data")
library(plotly)
library(dplyr)
library(ggplot2)
library(forcats)
vgsales %>%
plot_ly(x = ~Critic_Score, y = ~User_Score) %>%
add_markers()
##Dataset 2
scatter <- vgsales %>%
filter(Year == 2016) %>%
ggplot(aes(x = NA_Sales, y = Critic_Score)) +
geom_point(alpha = 0.3)
ggplotly(scatter)
library(plotly)
library(dplyr)
library(ggplot2)
library(forcats)
install.packages("flexdashboard")
devtools::install_github("privefl/prettyjekyll")
devtools::install_github("rstudio/blogdown")
servr::jekyll()
servr::jekyll()
blogdown::serve_site()
getwd()
setwd("/Users/hannahpu/OneDrive - University of Illinois - Urbana/github/hannahpu.github.io")
getwd()
blogdown::serve_site()
list.files()
servr::jekyll()
servr::jekyll()
jekyll build
servr::jekyll()
